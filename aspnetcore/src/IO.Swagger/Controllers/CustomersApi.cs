/*
 * Costco Fulfillment API
 *
 * An API for fullfilling orders placed on non-Costco channels by Costco 
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class CustomersApiController : Controller
    { 
        /// <summary>
        /// Purchase Membership
        /// </summary>
        
        /// <param name="costcoTrackingID">Unique ID to Correlate HTTP requests between a client and server.</param>
        /// <param name="body"></param>
        /// <param name="costcoEnv">Non-Production Environment Identifier</param>
        /// <response code="200">Status 200</response>
        /// <response code="400">Status 400</response>
        /// <response code="500">Status 500</response>
        [HttpPost]
        [Route("/ebusiness/loyaltyPrograms/memberships/")]
        [ValidateModelState]
        [SwaggerOperation("LoyaltyProgramsMembershipsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2008), description: "Status 200")]
        [SwaggerResponse(statusCode: 400, type: typeof(GatewayError), description: "Status 400")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Status 500")]
        public virtual IActionResult LoyaltyProgramsMembershipsPost([FromHeader][Required()]string costcoTrackingID, [FromBody]Body7 body, [FromHeader]string costcoEnv)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse2008));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(GatewayError));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            string exampleJson = null;
            exampleJson = "{\n  \"membershipOrder\" : {\n    \"shippingTotal\" : 6.02745618307040320615897144307382404804229736328125,\n    \"taxTotal\" : 1.46581298050294517310021547018550336360931396484375,\n    \"membershipLineItem\" : {\n      \"itemNumber\" : \"itemNumber\",\n      \"deliveryDetail\" : \"{\n  \\"shippingAddressReference\\": \\"fe6ce5e4-2c8b-11e8-b467-0ed5f89f718b\\",\n  \\"methodName\\": \\"ground\\"\n}\",\n      \"unitShippingTaxPrice\" : 9.301444243932575517419536481611430644989013671875,\n      \"quantity\" : 5.962133916683182377482808078639209270477294921875,\n      \"linkedFees\" : [ {\n        \"quantity\" : 4,\n        \"feeUnitTaxPrice\" : \"feeUnitTaxPrice\",\n        \"feeSku\" : \"feeSku\",\n        \"feeUnitPrice\" : 2.027123023002321833274663731572218239307403564453125\n      }, {\n        \"quantity\" : 4,\n        \"feeUnitTaxPrice\" : \"feeUnitTaxPrice\",\n        \"feeSku\" : \"feeSku\",\n        \"feeUnitPrice\" : 2.027123023002321833274663731572218239307403564453125\n      } ],\n      \"referenceNumber\" : \"referenceNumber\",\n      \"unitItemTaxPrice\" : 2.3021358869347654518833223846741020679473876953125,\n      \"coupons\" : [ {\n        \"totalDiscountAmount\" : 3.61607674925191080461672754609026014804840087890625,\n        \"couponCode\" : \"couponCode\"\n      }, {\n        \"totalDiscountAmount\" : 3.61607674925191080461672754609026014804840087890625,\n        \"couponCode\" : \"couponCode\"\n      } ],\n      \"unitItemSellPrice\" : 5.63737665663332876420099637471139430999755859375,\n      \"unitShippingPrice\" : 7.061401241503109105224211816675961017608642578125\n    },\n    \"currency\" : \"currency\",\n    \"subTotal\" : 0.80082819046101150206595775671303272247314453125\n  },\n  \"members\" : {\n    \"primaryMember\" : {\n      \"membershipNumber\" : \"membershipNumber\",\n      \"membershipTier\" : \"membershipTier\"\n    },\n    \"householdMember\" : {\n      \"membershipNumber\" : \"membershipNumber\",\n      \"membershipTier\" : \"membershipTier\"\n    }\n  },\n  \"status\" : \"accepted\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<InlineResponse2008>(exampleJson)
            : default(InlineResponse2008);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
