/*
 * Costco Fulfillment API
 *
 * An API for fullfilling orders placed on non-Costco channels by Costco 
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class Costing_ApiController : Controller
    { 
        /// <summary>
        /// Retrieve Linked Fees
        /// </summary>
        /// <remarks>[Final]</remarks>
        /// <param name="costcoTrackingId">Unique ID to Correlate HTTP requests between a client and server.</param>
        /// <param name="body"></param>
        /// <param name="costcoEnv">Non-Production Environment Identifier</param>
        /// <response code="200">Status 200</response>
        /// <response code="400">Status 400</response>
        /// <response code="500">Status 500</response>
        [HttpPost]
        [Route("/ebusiness/costing/linkedFees")]
        [ValidateModelState]
        [SwaggerOperation("CostingLinkedFeesPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2001), description: "Status 200")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Status 400")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Status 500")]
        public virtual IActionResult CostingLinkedFeesPost([FromHeader][Required()]string costcoTrackingId, [FromBody]Body1 body, [FromHeader]string costcoEnv)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse2001));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            string exampleJson = null;
            exampleJson = "{\n  \"lineItems\" : [ {\n    \"itemNumber\" : \"itemNumber\",\n    \"linkedFees\" : [ {\n      \"quantity\" : 2,\n      \"feeDescription\" : [ {\n        \"description\" : \"description\",\n        \"locale\" : \"locale\"\n      }, {\n        \"description\" : \"description\",\n        \"locale\" : \"locale\"\n      } ],\n      \"taxable\" : true,\n      \"feeSKU\" : \"2123343122\",\n      \"feeUnitPrice\" : 0.4\n    }, {\n      \"quantity\" : 2,\n      \"feeDescription\" : [ {\n        \"description\" : \"description\",\n        \"locale\" : \"locale\"\n      }, {\n        \"description\" : \"description\",\n        \"locale\" : \"locale\"\n      } ],\n      \"taxable\" : true,\n      \"feeSKU\" : \"2123343122\",\n      \"feeUnitPrice\" : 0.4\n    } ],\n    \"referenceNumber\" : \"referenceNumber\"\n  }, {\n    \"itemNumber\" : \"itemNumber\",\n    \"linkedFees\" : [ {\n      \"quantity\" : 2,\n      \"feeDescription\" : [ {\n        \"description\" : \"description\",\n        \"locale\" : \"locale\"\n      }, {\n        \"description\" : \"description\",\n        \"locale\" : \"locale\"\n      } ],\n      \"taxable\" : true,\n      \"feeSKU\" : \"2123343122\",\n      \"feeUnitPrice\" : 0.4\n    }, {\n      \"quantity\" : 2,\n      \"feeDescription\" : [ {\n        \"description\" : \"description\",\n        \"locale\" : \"locale\"\n      }, {\n        \"description\" : \"description\",\n        \"locale\" : \"locale\"\n      } ],\n      \"taxable\" : true,\n      \"feeSKU\" : \"2123343122\",\n      \"feeUnitPrice\" : 0.4\n    } ],\n    \"referenceNumber\" : \"referenceNumber\"\n  } ],\n  \"currency\" : \"USD\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<InlineResponse2001>(exampleJson)
            : default(InlineResponse2001);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
