/*
 * Costco Fullfillment API
 *
 * An API for fullfilling orders placed on non-Costco channels by Costco 
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using IO.Swagger.Attributes;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class OrderApiController : Controller
    { 
        /// <summary>
        /// Cancel an Order
        /// </summary>
        /// <remarks>Attempts cancellation of an order being fullfilled at Costco</remarks>
        /// <param name="salesChannelId"></param>
        /// <param name="partnerOrderNumber"></param>
        /// <param name="xRequestID">Unique ID to Correlate HTTP requests between a client and server.</param>
        /// <response code="200">Status 200</response>
        /// <response code="400">Status 400</response>
        /// <response code="500">Status 500</response>
        [HttpDelete]
        [Route("/v1.0.0/{salesChannelId}/order/{partnerOrderNumber}")]
        [ValidateModelState]
        [SwaggerOperation("SalesChannelIdOrderPartnerOrderNumberDelete")]
        public virtual void SalesChannelIdOrderPartnerOrderNumberDelete([FromRoute]string salesChannelId, [FromRoute]string partnerOrderNumber, [FromHeader]string xRequestID)
        { 
            throw new NotImplementedException();
        }

        /// <summary>
        /// Fulfillment Status
        /// </summary>
        /// <remarks>Retrieves the current Costco Fulfillment Status of an Order</remarks>
        /// <param name="salesChannelId"></param>
        /// <param name="partnerOrderNumber"></param>
        /// <response code="200">Status 200</response>
        /// <response code="400">Status 400</response>
        /// <response code="500">Status 500</response>
        [HttpGet]
        [Route("/v1.0.0/{salesChannelId}/order/{partnerOrderNumber}")]
        [ValidateModelState]
        [SwaggerOperation("SalesChannelIdOrderPartnerOrderNumberGet")]
        public virtual void SalesChannelIdOrderPartnerOrderNumberGet([FromRoute]string salesChannelId, [FromRoute]string partnerOrderNumber)
        { 
            throw new NotImplementedException();
        }

        /// <summary>
        /// Update Order
        /// </summary>
        /// <remarks>Updates an order that has been placed with Costco</remarks>
        /// <param name="salesChannelId"></param>
        /// <param name="partnerOrderNumber"></param>
        /// <param name="body"></param>
        /// <param name="xRequestID">Unique ID to Correlate HTTP requests between a client and server.</param>
        /// <response code="200">Status 200</response>
        /// <response code="400">Status 400</response>
        /// <response code="500">Status 500</response>
        [HttpPut]
        [Route("/v1.0.0/{salesChannelId}/order/{partnerOrderNumber}")]
        [ValidateModelState]
        [SwaggerOperation("SalesChannelIdOrderPartnerOrderNumberPut")]
        [SwaggerResponse(200, typeof(bool?), "Status 200")]
        [SwaggerResponse(400, typeof(bool?), "Status 400")]
        [SwaggerResponse(500, typeof(bool?), "Status 500")]
        public virtual IActionResult SalesChannelIdOrderPartnerOrderNumberPut([FromRoute]string salesChannelId, [FromRoute]string partnerOrderNumber, [FromBody]Body body, [FromHeader]string xRequestID)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<bool?>(exampleJson)
            : default(bool?);
            return new ObjectResult(example);
        }

        /// <summary>
        /// Notification of Customer Return
        /// </summary>
        
        /// <param name="salesChannelId"></param>
        /// <param name="partnerOrderNumber"></param>
        /// <param name="xRequestID">Unique ID to Correlate HTTP requests between a client and server.</param>
        /// <response code="200">Status 200</response>
        /// <response code="400">Status 400</response>
        /// <response code="500">Status 500</response>
        [HttpPatch]
        [Route("/v1.0.0/{salesChannelId}/order/{partnerOrderNumber}/return")]
        [ValidateModelState]
        [SwaggerOperation("SalesChannelIdOrderPartnerOrderNumberReturnPatch")]
        public virtual void SalesChannelIdOrderPartnerOrderNumberReturnPatch([FromRoute]string salesChannelId, [FromRoute]string partnerOrderNumber, [FromHeader]string xRequestID)
        { 
            throw new NotImplementedException();
        }

        /// <summary>
        /// Request Return Authorization
        /// </summary>
        
        /// <param name="salesChannelId"></param>
        /// <param name="partnerOrderNumber"></param>
        /// <param name="xRequestID">Unique ID to Correlate HTTP requests between a client and server.</param>
        /// <param name="body"></param>
        /// <response code="200">Status 200</response>
        /// <response code="400">Status 400</response>
        /// <response code="500">Status 500</response>
        [HttpPost]
        [Route("/v1.0.0/{salesChannelId}/order/{partnerOrderNumber}/return")]
        [ValidateModelState]
        [SwaggerOperation("SalesChannelIdOrderPartnerOrderNumberReturnPost")]
        [SwaggerResponse(200, typeof(ReturnAuthorization), "Status 200")]
        [SwaggerResponse(400, typeof(ReturnAuthorization), "Status 400")]
        [SwaggerResponse(500, typeof(ReturnAuthorization), "Status 500")]
        public virtual IActionResult SalesChannelIdOrderPartnerOrderNumberReturnPost([FromRoute]string salesChannelId, [FromRoute]string partnerOrderNumber, [FromHeader]string xRequestID, [FromBody]Body1 body)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ReturnAuthorization>(exampleJson)
            : default(ReturnAuthorization);
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create an Order
        /// </summary>
        /// <remarks>Creates an Order at Costco to be fulfilled</remarks>
        /// <param name="salesChannelId"></param>
        /// <param name="xRequestID">Unique ID to Correlate HTTP requests between a client and server.</param>
        /// <param name="body"></param>
        /// <response code="200">Status 200</response>
        /// <response code="400">Status 400</response>
        /// <response code="500">Status 500</response>
        [HttpPost]
        [Route("/v1.0.0/{salesChannelId}/order/")]
        [ValidateModelState]
        [SwaggerOperation("SalesChannelIdOrderPost")]
        [SwaggerResponse(200, typeof(InlineResponse2001), "Status 200")]
        [SwaggerResponse(400, typeof(InlineResponse2001), "Status 400")]
        [SwaggerResponse(500, typeof(InlineResponse2001), "Status 500")]
        public virtual IActionResult SalesChannelIdOrderPost([FromRoute]string salesChannelId, [FromHeader]string xRequestID, [FromBody]PartnerOrder body)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<InlineResponse2001>(exampleJson)
            : default(InlineResponse2001);
            return new ObjectResult(example);
        }
    }
}
